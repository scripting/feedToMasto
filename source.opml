<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Thu, 01 Dec 2022 15:49:27 GMT -->
<opml version="2.0">
	<head>
		<title>nodeEditor: feedToMasto</title>
		<dateCreated>Mon, 28 Nov 2022 23:00:42 GMT</dateCreated>
		<dateModified>Thu, 01 Dec 2022 15:49:27 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 5, 12, 13</expansionState>
		<vertScrollState>1</vertScrollState>
		<windowTop>57</windowTop>
		<windowLeft>355</windowLeft>
		<windowBottom>1072</windowBottom>
		<windowRight>1634</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/feedtomasto/">
			<outline text="worknotes.md" created="Fri, 24 Jun 2022 18:16:01 GMT">
				<outline text="#### 11/28/22 by DW" created="Fri, 24 Jun 2022 18:16:05 GMT">
					<outline text="Check a list of feeds periodically, post new items to Mastodon." created="Fri, 24 Jun 2022 18:16:09 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;feedtomasto&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;feedtomasto.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;reallysimple&quot;: &quot;*&quot;"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="feedtomasto.js" created="Thu, 17 Feb 2022 14:26:38 GMT">
				<outline text="const myVersion = &quot;0.4.0&quot;, myProductName = &quot;feedToMasto&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Wed, 24 Nov 2021 15:06:21 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Sat, 05 Mar 2022 17:19:07 GMT"/>
				<outline text="" created="Mon, 21 Nov 2022 20:15:42 GMT"/>
				<outline text="var config = {" created="Mon, 29 Nov 2021 15:52:16 GMT">
					<outline text="enabled: true," created="Wed, 30 Nov 2022 15:39:35 GMT"/>
					<outline text="feeds: [" created="Mon, 28 Nov 2022 23:04:47 GMT">
						<outline text="&quot;http://scripting.com/rss.xml&quot;," created="Mon, 28 Nov 2022 23:05:24 GMT"/>
						<outline text="&quot;http://data.feedland.org/feeds/davewiner.xml&quot;" created="Mon, 28 Nov 2022 23:05:24 GMT"/>
						<outline text="]," created="Mon, 28 Nov 2022 23:04:52 GMT"/>
						</outline>
					<outline text="masto: {" created="Mon, 28 Nov 2022 23:49:19 GMT">
						<outline text="appName: &quot;feedToMasto&quot;,"/>
						<outline text="urlMastodonServer: undefined,"/>
						<outline text="access_token: undefined,"/>
						<outline text="created_at: undefined,"/>
						<outline text="scope: &quot;write:statuses read:accounts&quot;,"/>
						<outline text="token_type: &quot;Bearer&quot;"/>
						<outline text="}," created="Mon, 28 Nov 2022 23:49:24 GMT"/>
						</outline>
					<outline text="dataFolder: &quot;data/&quot;," created="Mon, 21 Nov 2022 20:41:23 GMT"/>
					<outline text="ctSecsBetwChecks: 60," created="Mon, 28 Nov 2022 23:13:06 GMT"/>
					<outline text="maxCtChars: 500," created="Mon, 28 Nov 2022 23:20:05 GMT"/>
					<outline text="flOnlyPostNewItems: true, //if false when we start up we'll post all the items in the feed" created="Tue, 29 Nov 2022 17:46:10 GMT"/>
					<outline text="maxGuids: 2500, //we don't store the guids forever, after we have this number of guids, we start deleting the oldest ones" created="Tue, 29 Nov 2022 17:47:14 GMT"/>
					<outline text="flServerSupportsMarkdown: true, //we're optimistic! ;-)" created="Tue, 29 Nov 2022 18:49:57 GMT"/>
					<outline text="disclaimer: &quot;*This is a test. This came out of the archive of my blog. None of this happened today or yesterday. Still diggin!*&quot;" created="Wed, 30 Nov 2022 16:02:39 GMT"/>
					<outline text="};" created="Mon, 29 Nov 2021 15:52:19 GMT"/>
					</outline>
				<outline text="" created="Mon, 28 Nov 2022 23:28:05 GMT"/>
				<outline text="var stats = {" created="Mon, 28 Nov 2022 23:28:06 GMT">
					<outline text="guids: new Object ()" created="Mon, 28 Nov 2022 23:28:16 GMT"/>
					<outline text="};" created="Mon, 28 Nov 2022 23:28:12 GMT"/>
					</outline>
				<outline text="const fnameStats = &quot;stats.json&quot;;" created="Mon, 28 Nov 2022 23:31:55 GMT"/>
				<outline text="var flStatsChanged = false;" created="Mon, 28 Nov 2022 23:30:42 GMT"/>
				<outline text="var whenLastCheck = new Date (0);" created="Mon, 28 Nov 2022 23:09:28 GMT"/>
				<outline text="" created="Mon, 28 Nov 2022 23:05:37 GMT"/>
				<outline text="function statsChanged () {" created="Mon, 28 Nov 2022 23:32:35 GMT">
					<outline text="flStatsChanged = true;" created="Mon, 28 Nov 2022 23:32:47 GMT"/>
					<outline text="}" created="Mon, 28 Nov 2022 23:32:40 GMT"/>
					</outline>
				<outline text="function deleteOldGuids () {" created="Wed, 30 Nov 2022 15:32:57 GMT">
					<outline text="function countGuids () {" created="Wed, 30 Nov 2022 15:34:23 GMT">
						<outline text="var ct = 0;" created="Wed, 30 Nov 2022 15:34:50 GMT"/>
						<outline text="for (var x in stats.guids) {" created="Wed, 30 Nov 2022 15:35:01 GMT">
							<outline text="ct++" created="Wed, 30 Nov 2022 15:35:01 GMT"/>
							<outline text="}" created="Wed, 30 Nov 2022 15:35:03 GMT"/>
							</outline>
						<outline text="return (ct);" created="Wed, 30 Nov 2022 15:34:53 GMT"/>
						<outline text="}" created="Wed, 30 Nov 2022 15:34:28 GMT"/>
						</outline>
					<outline text="function deleteOldestGuid () {" created="Wed, 30 Nov 2022 15:25:15 GMT">
						<outline text="var oldestWhen = new Date (), oldestx;" created="Wed, 30 Nov 2022 15:27:07 GMT"/>
						<outline text="function dateLessThan (d1, d2) {">
							<outline text="return (new Date (d1) &lt; new Date (d2));"/>
							<outline text="}"/>
							</outline>
						<outline text="for (var x in stats.guids) {" created="Wed, 30 Nov 2022 15:26:36 GMT">
							<outline text="var theGuid = stats.guids [x];" created="Wed, 30 Nov 2022 15:28:05 GMT"/>
							<outline text="if (dateLessThan (theGuid.when, oldestWhen)) {" created="Wed, 30 Nov 2022 15:28:15 GMT">
								<outline text="oldestWhen = theGuid.when;" created="Wed, 30 Nov 2022 15:28:34 GMT"/>
								<outline text="oldestx = x;" created="Wed, 30 Nov 2022 15:28:41 GMT"/>
								<outline text="}" created="Wed, 30 Nov 2022 15:28:46 GMT"/>
								</outline>
							<outline text="}" created="Wed, 30 Nov 2022 15:27:03 GMT"/>
							</outline>
						<outline text="if (oldestx !== undefined) {" created="Wed, 30 Nov 2022 15:29:03 GMT">
							<outline text="delete stats.guids [oldestx];" created="Wed, 30 Nov 2022 15:29:16 GMT"/>
							<outline text="statsChanged ();" created="Wed, 30 Nov 2022 15:45:47 GMT"/>
							<outline text="}" created="Wed, 30 Nov 2022 15:29:37 GMT"/>
							</outline>
						<outline text="}" created="Wed, 30 Nov 2022 15:26:35 GMT"/>
						</outline>
					<outline text="var ct = countGuids () - config.maxGuids;" created="Wed, 30 Nov 2022 15:27:20 GMT"/>
					<outline text="if (ct &gt; 0) {" created="Wed, 30 Nov 2022 15:31:41 GMT">
						<outline text="console.log (&quot;deleteOldGuids: ct == &quot; + ct);" created="Wed, 30 Nov 2022 15:31:45 GMT"/>
						<outline text="for (var i = 1; i &lt;= ct; i++) {" created="Wed, 30 Nov 2022 15:29:53 GMT">
							<outline text="deleteOldestGuid ();" created="Wed, 30 Nov 2022 15:30:24 GMT"/>
							<outline text="}" created="Wed, 30 Nov 2022 15:30:19 GMT"/>
							</outline>
						<outline text="}" created="Wed, 30 Nov 2022 15:31:59 GMT"/>
						</outline>
					<outline text="}" created="Wed, 30 Nov 2022 15:33:03 GMT"/>
					</outline>
				<outline text="function isNewFeed (feedUrl) {" created="Tue, 29 Nov 2022 17:59:27 GMT">
					<outline text="var flnew = true;" created="Tue, 29 Nov 2022 18:00:31 GMT"/>
					<outline text="for (var x in stats.guids) {" created="Tue, 29 Nov 2022 17:59:47 GMT">
						<outline text="if (stats.guids [x].feedUrl == feedUrl) {" created="Tue, 29 Nov 2022 17:59:58 GMT">
							<outline text="flnew = false;" created="Tue, 29 Nov 2022 18:00:42 GMT"/>
							<outline text="break;" created="Tue, 29 Nov 2022 18:00:46 GMT"/>
							<outline text="}" created="Tue, 29 Nov 2022 18:00:26 GMT"/>
							</outline>
						<outline text="}" created="Tue, 29 Nov 2022 17:59:52 GMT"/>
						</outline>
					<outline text="return (flnew);" created="Tue, 29 Nov 2022 18:00:57 GMT"/>
					<outline text="}" created="Tue, 29 Nov 2022 17:59:35 GMT"/>
					</outline>
				<outline text="function buildParamList (paramtable) { //8/4/21 by DW" created="Sat, 09 Aug 2014 15:39:08 GMT" pgfnum="43181">
					<outline text="Changes" isComment="true" created="Wed, 04 Aug 2021 14:47:01 GMT">
						<outline text="8/4/21; 10:47:04 AM by DW" created="Wed, 04 Aug 2021 14:47:03 GMT">
							<outline text="Copied twBuildParamList. If an element of params is undefined, don't include it. We were encoding it as a string, &quot;undefined&quot; and all of a sudden on the other side, in davetwitter, it was calling it an error. It is pretty errorish, but why it started now, that's a mystery." created="Wed, 04 Aug 2021 14:47:04 GMT"/>
							</outline>
						</outline>
					<outline text="var s = &quot;&quot;;" created="Sat, 09 Aug 2014 15:39:47 GMT" pgfnum="43188"/>
					<outline text="for (var x in paramtable) {" created="Sat, 09 Aug 2014 15:39:38 GMT" pgfnum="43186">
						<outline text="if (paramtable [x] !== undefined) { //8/4/21 by DW" created="Wed, 04 Aug 2021 14:48:52 GMT">
							<outline text="if (s.length &gt; 0) {" created="Sat, 09 Aug 2014 15:40:02 GMT" pgfnum="43189">
								<outline text="s += &quot;&amp;&quot;;" created="Sat, 09 Aug 2014 15:40:08 GMT" pgfnum="43190"/>
								<outline text="}" created="Sat, 09 Aug 2014 15:40:14 GMT" pgfnum="43191"/>
								</outline>
							<outline text="s += x + &quot;=&quot; + encodeURIComponent (paramtable [x]);" created="Sat, 09 Aug 2014 15:40:19 GMT" pgfnum="43192"/>
							<outline text="}" created="Wed, 04 Aug 2021 14:49:01 GMT"/>
							</outline>
						<outline text="}" created="Sat, 09 Aug 2014 15:39:43 GMT" pgfnum="43187"/>
						</outline>
					<outline text="return (s);" created="Sat, 09 Aug 2014 15:40:54 GMT" pgfnum="43193"/>
					<outline text="}" created="Sat, 09 Aug 2014 15:39:35 GMT" pgfnum="43185"/>
					</outline>
				<outline text="function mastocall (path, params, callback) {" created="Mon, 21 Nov 2022 13:37:24 GMT">
					<outline text="var headers = undefined;" created="Mon, 21 Nov 2022 13:41:57 GMT"/>
					<outline text="if (config.masto.accessToken !== undefined) {" created="Mon, 21 Nov 2022 13:42:22 GMT">
						<outline text="headers = {">
							<outline text="Authorization: &quot;Bearer &quot; + config.masto.accessToken"/>
							<outline text="};"/>
							</outline>
						<outline text="}" created="Mon, 21 Nov 2022 13:42:32 GMT"/>
						</outline>
					<outline text="const theRequest = {">
						<outline text="url: config.masto.urlMastodonServer + path + &quot;?&quot; + buildParamList (params),"/>
						<outline text="method: &quot;GET&quot;,"/>
						<outline text="headers,"/>
						<outline text="};"/>
						</outline>
					<outline text="request (theRequest, function (err, response, jsontext) {">
						<outline text="function sendBackError (defaultMessage) {" created="Sat, 26 Nov 2022 17:10:38 GMT">
							<outline text="var flcalledback = false;" created="Sat, 26 Nov 2022 17:11:24 GMT"/>
							<outline text="if (data !== undefined) {" created="Sat, 26 Nov 2022 17:11:24 GMT">
								<outline text="try {" created="Sat, 26 Nov 2022 17:11:37 GMT">
									<outline text="jstruct = JSON.parse (data);" created="Sat, 26 Nov 2022 17:11:46 GMT"/>
									<outline text="if (jstruct.error !== undefined) {" created="Sat, 26 Nov 2022 17:11:56 GMT">
										<outline text="callback ({message: jstruct.error});" created="Sat, 26 Nov 2022 17:12:31 GMT"/>
										<outline text="flcalledback = true;" created="Sat, 26 Nov 2022 17:12:58 GMT"/>
										<outline text="}" created="Sat, 26 Nov 2022 17:12:25 GMT"/>
										</outline>
									<outline text="}" created="Sat, 26 Nov 2022 17:11:38 GMT"/>
									</outline>
								<outline text="catch (err) {" created="Sat, 26 Nov 2022 17:11:39 GMT">
									<outline text="}" created="Sat, 26 Nov 2022 17:11:43 GMT"/>
									</outline>
								<outline text="}" created="Sat, 26 Nov 2022 17:11:31 GMT"/>
								<outline text="" created="Sat, 26 Nov 2022 17:11:32 GMT"/>
								</outline>
							<outline text="if (!flcalledback) {" created="Sat, 26 Nov 2022 17:11:24 GMT">
								<outline text="callback ({message: defaultMessage});" created="Sat, 26 Nov 2022 17:14:05 GMT"/>
								<outline text="}" created="Sat, 26 Nov 2022 17:13:24 GMT"/>
								</outline>
							<outline text="}" created="Sat, 26 Nov 2022 17:10:46 GMT"/>
							</outline>
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
							<outline text="sendBackError (err.message);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
							<outline text="var code = response.statusCode;" created="Tue, 04 Jan 2022 22:39:15 GMT"/>
							<outline text="if ((code &lt; 200) || (code &gt; 299)) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
								<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
								<outline text="sendBackError (message);" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
								<outline text="try {" created="Tue, 29 Nov 2022 17:25:23 GMT">
									<outline text="callback (undefined, JSON.parse (jsontext))"/>
									<outline text="}" created="Tue, 29 Nov 2022 17:25:25 GMT"/>
									</outline>
								<outline text="catch (err) {" created="Tue, 29 Nov 2022 17:25:26 GMT">
									<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
									<outline text="}" created="Tue, 29 Nov 2022 17:25:29 GMT"/>
									</outline>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 21 Nov 2022 13:39:58 GMT"/>
					</outline>
				<outline text="function mastopost (path, params, filedata, callback) {" created="Mon, 21 Nov 2022 12:36:03 GMT">
					<outline text="Changes" isComment="true" created="Mon, 21 Nov 2022 12:40:54 GMT">
						<outline text="11/21/22; 7:40:57 AM by DW" created="Mon, 21 Nov 2022 12:40:56 GMT">
							<outline text="Created. " created="Mon, 21 Nov 2022 12:40:57 GMT"/>
							</outline>
						</outline>
					<outline text="const theRequest = {">
						<outline text="url: config.masto.urlMastodonServer + path + &quot;?&quot; + buildParamList (params),"/>
						<outline text="method: &quot;POST&quot;,"/>
						<outline text="headers: {">
							<outline text="Authorization: &quot;Bearer &quot; + config.masto.accessToken"/>
							<outline text="},"/>
							</outline>
						<outline text="body: filedata" created="Sun, 20 Nov 2022 22:11:40 GMT"/>
						<outline text="};"/>
						</outline>
					<outline text="console.log (&quot;mastopost: theRequest == &quot; + utils.jsonStringify (theRequest));" isComment="true" created="Wed, 23 Nov 2022 20:58:23 GMT"/>
					<outline text="request (theRequest, function (err, response, jsontext) {">
						<outline text="if (err) {" created="Sun, 08 Aug 2021 15:33:13 GMT">
							<outline text="console.log (&quot;mastopost: err.message == &quot; + err.message);" created="Wed, 23 Nov 2022 20:58:23 GMT"/>
							<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:20 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 Aug 2021 15:33:21 GMT">
							<outline text="var code = response.statusCode;" created="Tue, 04 Jan 2022 22:39:15 GMT"/>
							<outline text="console.log (&quot;mastopost: response.statusCode == &quot; + response.statusCode);" isComment="true" created="Wed, 23 Nov 2022 20:58:23 GMT"/>
							<outline text="if ((code &lt; 200) || (code &gt; 299)) {" created="Sun, 08 Aug 2021 15:33:23 GMT">
								<outline text="const message = &quot;The request returned a status code of &quot; + response.statusCode + &quot;.&quot;;" created="Sun, 08 Aug 2021 15:34:06 GMT"/>
								<outline text="callback ({message});" created="Sun, 08 Aug 2021 15:34:43 GMT"/>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 08 Aug 2021 15:33:29 GMT">
								<outline text="try {" created="Tue, 29 Nov 2022 17:25:23 GMT">
									<outline text="callback (undefined, JSON.parse (jsontext))"/>
									<outline text="}" created="Tue, 29 Nov 2022 17:25:25 GMT"/>
									</outline>
								<outline text="catch (err) {" created="Tue, 29 Nov 2022 17:25:26 GMT">
									<outline text="callback (err);" created="Sun, 08 Aug 2021 15:33:17 GMT"/>
									<outline text="}" created="Tue, 29 Nov 2022 17:25:29 GMT"/>
									</outline>
								<outline text="}" created="Sun, 08 Aug 2021 15:33:31 GMT"/>
								</outline>
							<outline text="}" created="Sun, 08 Aug 2021 15:33:33 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 21 Nov 2022 12:36:39 GMT"/>
					</outline>
				<outline text="function getUserInfo (callback) {" created="Mon, 21 Nov 2022 13:38:24 GMT">
					<outline text="mastocall (&quot;api/v1/accounts/verify_credentials&quot;, undefined, callback);" created="Mon, 21 Nov 2022 13:44:47 GMT"/>
					<outline text="}" created="Mon, 21 Nov 2022 13:38:32 GMT"/>
					</outline>
				<outline text="function tootStatus (statusText, inReplyTo, callback) {" created="Sun, 20 Nov 2022 22:02:32 GMT">
					<outline text="Changes" isComment="true" created="Wed, 30 Nov 2022 15:40:47 GMT">
						<outline text="11/30/22; 10:40:50 AM by DW" created="Wed, 30 Nov 2022 15:40:49 GMT">
							<outline text="This is the info we get back when creating a new status message." created="Wed, 30 Nov 2022 15:40:50 GMT">
								<outline text="{">
									<outline text="id: '109433246572276107',"/>
									<outline text="created_at: '2022-11-30T14:33:45.883Z',"/>
									<outline text="in_reply_to_id: null,"/>
									<outline text="in_reply_to_account_id: null,"/>
									<outline text="sensitive: false,"/>
									<outline text="spoiler_text: '',"/>
									<outline text="visibility: 'public',"/>
									<outline text="language: 'en',"/>
									<outline text="uri: 'https://social.masto.land/users/dave/statuses/109433246572276107',"/>
									<outline text="url: 'https://social.masto.land/@dave/109433246572276107',"/>
									<outline text="replies_count: 0,"/>
									<outline text="reblogs_count: 0,"/>
									<outline text="favourites_count: 0,"/>
									<outline text="edited_at: null,"/>
									<outline text="favourited: false,"/>
									<outline text="reblogged: false,"/>
									<outline text="muted: false,"/>
									<outline text="bookmarked: false,"/>
									<outline text="pinned: false,"/>
									<outline text="local_only: false,"/>
									<outline text="content: '&lt;p&gt;&lt;em&gt;This is a test. This came out of the archive of my blog. None of this happened today or yesterday. Still diggin!&lt;/em&gt;&lt;/p&gt;&lt;h1&gt;Using Twitter for identity&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://scripting.com/2022/11/30/143027.html?title=usingTwitterForIdentity&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;scripting.com/2022/11/30/14302&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;7.html?title=usingTwitterForIdentity&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;',"/>
									<outline text="filtered: [],"/>
									<outline text="reblog: null,"/>
									<outline text="application: { name: 'feedToMasto', website: null },"/>
									<outline text="account: {">
										<outline text="id: '109405094861978906',"/>
										<outline text="username: 'dave',"/>
										<outline text="acct: 'dave',"/>
										<outline text="display_name: &quot;Dave Winer's linkblog in Masto&quot;,"/>
										<outline text="locked: false,"/>
										<outline text="bot: false,"/>
										<outline text="discoverable: false,"/>
										<outline text="group: false,"/>
										<outline text="created_at: '2022-11-25T00:00:00.000Z',"/>
										<outline text="note: '',"/>
										<outline text="url: 'https://social.masto.land/@dave',"/>
										<outline text="avatar: 'https://social.masto.land/system/accounts/avatars/109/405/094/861/978/906/original/ba1994629374761a.png',"/>
										<outline text="avatar_static: 'https://social.masto.land/system/accounts/avatars/109/405/094/861/978/906/original/ba1994629374761a.png',"/>
										<outline text="header: 'https://social.masto.land/system/accounts/headers/109/405/094/861/978/906/original/d1d4f4f073727c1e.png',"/>
										<outline text="header_static: 'https://social.masto.land/system/accounts/headers/109/405/094/861/978/906/original/d1d4f4f073727c1e.png',"/>
										<outline text="followers_count: 84,"/>
										<outline text="following_count: 2,"/>
										<outline text="statuses_count: 96,"/>
										<outline text="last_status_at: '2022-11-30',"/>
										<outline text="noindex: false,"/>
										<outline text="emojis: [],"/>
										<outline text="fields: []"/>
										</outline>
									<outline text="},"/>
									<outline text="media_attachments: [],"/>
									<outline text="mentions: [],"/>
									<outline text="tags: [],"/>
									<outline text="emojis: [],"/>
									<outline text="card: null,"/>
									<outline text="poll: null"/>
									</outline>
								<outline text="}"/>
								</outline>
							</outline>
						</outline>
					<outline text="const params = {" created="Mon, 21 Nov 2022 14:39:03 GMT">
						<outline text="status: statusText," created="Mon, 21 Nov 2022 14:39:18 GMT"/>
						<outline text="in_reply_to_id: inReplyTo" created="Mon, 21 Nov 2022 14:39:20 GMT"/>
						<outline text="};" created="Mon, 21 Nov 2022 14:39:09 GMT"/>
						</outline>
					<outline text="console.log (&quot;tootStatus: statusText == &quot; + statusText + &quot;, inReplyTo == &quot; + inReplyTo);" isComment="true" created="Mon, 21 Nov 2022 14:44:46 GMT"/>
					<outline text="mastopost (&quot;api/v1/statuses&quot;, params, undefined, callback);" created="Mon, 21 Nov 2022 12:45:43 GMT"/>
					<outline text="}" created="Sun, 20 Nov 2022 22:02:56 GMT"/>
					</outline>
				<outline text="function postNewItem (item, feedUrl) {" created="Mon, 28 Nov 2022 23:39:49 GMT">
					<outline text="console.log (&quot;postNewItem: &quot; + item.guid);" isComment="true" created="Mon, 28 Nov 2022 23:13:34 GMT"/>
					<outline text="" isComment="true" created="Tue, 29 Nov 2022 00:07:39 GMT"/>
					<outline text="var statustext = &quot;&quot;;" created="Tue, 29 Nov 2022 00:08:18 GMT"/>
					<outline text="function add (s) {" created="Tue, 29 Nov 2022 00:07:39 GMT">
						<outline text="statustext += s + &quot;\n&quot;;" created="Tue, 29 Nov 2022 00:07:51 GMT"/>
						<outline text="}" created="Tue, 29 Nov 2022 00:08:09 GMT"/>
						</outline>
					<outline text="" created="Tue, 29 Nov 2022 00:16:03 GMT"/>
					<outline text="add (config.disclaimer + &quot;\n&quot;);" created="Tue, 29 Nov 2022 00:16:04 GMT"/>
					<outline text="" created="Tue, 29 Nov 2022 00:16:04 GMT"/>
					<outline text="var link = &quot;&quot;;" created="Tue, 29 Nov 2022 00:11:57 GMT"/>
					<outline text="if (item.link !== undefined) {" created="Tue, 29 Nov 2022 00:12:06 GMT">
						<outline text="link = item.link;" created="Tue, 29 Nov 2022 00:12:14 GMT"/>
						<outline text="}" created="Tue, 29 Nov 2022 00:12:19 GMT"/>
						</outline>
					<outline text="if (item.title !== undefined) {" created="Mon, 28 Nov 2022 23:20:55 GMT">
						<outline text="add (&quot;# &quot; + item.title + &quot;\n&quot;);" created="Mon, 28 Nov 2022 23:21:08 GMT"/>
						<outline text="}" created="Mon, 28 Nov 2022 23:21:03 GMT"/>
						</outline>
					<outline text="else {" created="Tue, 29 Nov 2022 00:09:28 GMT">
						<outline text="function addDescription (desc) {" created="Tue, 29 Nov 2022 18:51:43 GMT">
							<outline text="add (utils.maxStringLength (desc, config.maxCtChars - statustext.length - link.length - 5, false, true));"/>
							<outline text="add (&quot;&quot;);" created="Tue, 29 Nov 2022 00:14:46 GMT"/>
							<outline text="}" created="Tue, 29 Nov 2022 18:51:49 GMT"/>
							</outline>
						<outline text="if (config.flServerSupportsMarkdown) {" created="Tue, 29 Nov 2022 18:51:04 GMT">
							<outline text="if ((item.description !== undefined) || (item.markdown !== undefined)) {" created="Mon, 28 Nov 2022 23:20:55 GMT">
								<outline text="var desc = (item.markdown === undefined) ? item.description : item.markdown;" created="Tue, 29 Nov 2022 18:42:46 GMT"/>
								<outline text="addDescription (desc);" created="Tue, 29 Nov 2022 18:51:20 GMT"/>
								<outline text="}" created="Mon, 28 Nov 2022 23:21:03 GMT"/>
								</outline>
							<outline text="}" created="Tue, 29 Nov 2022 18:51:08 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 29 Nov 2022 18:51:09 GMT">
							<outline text="addDescription (item.description);" created="Tue, 29 Nov 2022 18:51:20 GMT"/>
							<outline text="}" created="Tue, 29 Nov 2022 18:51:11 GMT"/>
							</outline>
						<outline text="}" created="Tue, 29 Nov 2022 00:09:30 GMT"/>
						</outline>
					<outline text="if (link.length &gt; 0) {" created="Tue, 29 Nov 2022 00:12:49 GMT">
						<outline text="add (&quot;&quot;);" created="Wed, 30 Nov 2022 16:45:07 GMT"/>
						<outline text="add (link);" created="Tue, 29 Nov 2022 00:12:55 GMT"/>
						<outline text="}" created="Tue, 29 Nov 2022 00:12:59 GMT"/>
						</outline>
					<outline text="" created="Tue, 29 Nov 2022 00:13:13 GMT"/>
					<outline text="tootStatus (statustext, undefined, function (err, data) {" created="Mon, 28 Nov 2022 23:55:29 GMT">
						<outline text="if (err) {" created="Mon, 28 Nov 2022 23:55:53 GMT">
							<outline text="console.log (err.message);" created="Mon, 28 Nov 2022 23:56:04 GMT"/>
							<outline text="}" created="Mon, 28 Nov 2022 23:55:57 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 28 Nov 2022 23:55:58 GMT">
							<outline text="console.log (new Date ().toLocaleTimeString () + &quot;: &quot; + data.url);" created="Mon, 28 Nov 2022 23:11:45 GMT"/>
							<outline text="}" created="Mon, 28 Nov 2022 23:56:00 GMT"/>
							</outline>
						<outline text="});" created="Mon, 28 Nov 2022 23:55:47 GMT"/>
						</outline>
					<outline text="postNewStatus (statustext, undefined, function (err, data) {" isComment="true" created="Mon, 28 Nov 2022 23:55:29 GMT">
						<outline text="if (err) {" created="Mon, 28 Nov 2022 23:55:53 GMT">
							<outline text="console.log (err.message);" created="Mon, 28 Nov 2022 23:56:04 GMT"/>
							<outline text="}" created="Mon, 28 Nov 2022 23:55:57 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 28 Nov 2022 23:55:58 GMT">
							<outline text="console.log (data);" created="Mon, 28 Nov 2022 23:56:04 GMT"/>
							<outline text="}" created="Mon, 28 Nov 2022 23:56:00 GMT"/>
							</outline>
						<outline text="});" created="Mon, 28 Nov 2022 23:55:47 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Nov 2022 23:39:57 GMT"/>
					</outline>
				<outline text="function checkFeed (feedUrl, callback) {" created="Mon, 28 Nov 2022 23:05:38 GMT">
					<outline text="const flNewFeed = isNewFeed (feedUrl);" created="Tue, 29 Nov 2022 18:01:13 GMT"/>
					<outline text="var flPost = (flNewFeed &amp;&amp; config.flOnlyPostNewItems) ? false : true;" created="Tue, 29 Nov 2022 18:04:25 GMT"/>
					<outline text="" created="Tue, 29 Nov 2022 18:04:36 GMT"/>
					<outline text="console.log (&quot;checkFeed: feedUrl == &quot; + feedUrl);" isComment="true" created="Mon, 28 Nov 2022 23:13:34 GMT"/>
					<outline text="reallysimple.readFeed (feedUrl, function (err, theFeed) {" created="Sat, 19 Mar 2022 15:14:01 GMT">
						<outline text="if (err) {" created="Sat, 19 Mar 2022 15:15:11 GMT">
							<outline text="callback (err);" created="Sat, 19 Mar 2022 15:15:16 GMT"/>
							<outline text="}" created="Sat, 19 Mar 2022 15:15:20 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 19 Mar 2022 15:15:21 GMT">
							<outline text="theFeed.items.forEach (function (item) {" created="Mon, 28 Nov 2022 23:19:30 GMT">
								<outline text="if (item.guid !== undefined) { //we ignore items without guids" created="Mon, 28 Nov 2022 23:33:13 GMT">
									<outline text="var flfound = false;" created="Mon, 28 Nov 2022 23:34:32 GMT"/>
									<outline text="for (var x in stats.guids) {" created="Tue, 29 Nov 2022 17:56:37 GMT">
										<outline text="if (x == item.guid) {" created="Mon, 28 Nov 2022 23:35:02 GMT">
											<outline text="flfound = true;" created="Mon, 28 Nov 2022 23:35:09 GMT"/>
											<outline text="break;" created="Tue, 29 Nov 2022 17:57:04 GMT"/>
											<outline text="}" created="Mon, 28 Nov 2022 23:35:12 GMT"/>
											</outline>
										<outline text="}" created="Tue, 29 Nov 2022 17:56:45 GMT"/>
										</outline>
									<outline text="if (!flfound) {" created="Mon, 28 Nov 2022 23:35:26 GMT">
										<outline text="stats.guids [item.guid] = {" created="Tue, 29 Nov 2022 17:52:30 GMT">
											<outline text="when: new Date ()," created="Tue, 29 Nov 2022 17:53:26 GMT"/>
											<outline text="feedUrl" created="Tue, 29 Nov 2022 17:53:40 GMT"/>
											<outline text="};" created="Tue, 29 Nov 2022 17:53:12 GMT"/>
											</outline>
										<outline text="statsChanged ();" created="Mon, 28 Nov 2022 23:35:55 GMT"/>
										<outline text="if (flPost) {" created="Tue, 29 Nov 2022 18:04:14 GMT">
											<outline text="postNewItem (item, feedUrl, flNewFeed);" created="Mon, 28 Nov 2022 23:39:23 GMT"/>
											<outline text="}" created="Tue, 29 Nov 2022 18:19:14 GMT"/>
											</outline>
										<outline text="}" created="Mon, 28 Nov 2022 23:35:30 GMT"/>
										</outline>
									<outline text="}" created="Mon, 28 Nov 2022 23:33:50 GMT"/>
									</outline>
								<outline text="});" created="Mon, 28 Nov 2022 23:19:54 GMT"/>
								</outline>
							<outline text="}" created="Sat, 19 Mar 2022 15:15:23 GMT"/>
							</outline>
						<outline text="});" created="Sat, 19 Mar 2022 15:15:01 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Nov 2022 23:05:53 GMT"/>
					</outline>
				<outline text="function writeStats () {" created="Wed, 30 Nov 2022 15:47:36 GMT">
					<outline text="fs.writeFile (fnameStats, utils.jsonStringify (stats), function (err) {" created="Mon, 28 Nov 2022 23:30:59 GMT">
						<outline text="});" created="Mon, 28 Nov 2022 23:31:31 GMT"/>
						</outline>
					<outline text="}" created="Wed, 30 Nov 2022 15:47:44 GMT"/>
					</outline>
				<outline text="function everyMinute () {" created="Wed, 30 Nov 2022 15:49:21 GMT">
					<outline text="if (config.enabled) { //check feeds at most once a minute" created="Wed, 30 Nov 2022 15:53:01 GMT">
						<outline text="if (utils.secondsSince (whenLastCheck) &gt; config.ctSecsBetwChecks) {" created="Mon, 28 Nov 2022 23:10:08 GMT">
							<outline text="whenLastCheck = new Date ();" created="Mon, 28 Nov 2022 23:10:34 GMT"/>
							<outline text="config.feeds.forEach (function (feedUrl) {" created="Mon, 28 Nov 2022 23:10:39 GMT">
								<outline text="checkFeed (feedUrl, function (err, data) {" created="Mon, 28 Nov 2022 23:11:03 GMT">
									<outline text="if (err) {" created="Mon, 28 Nov 2022 23:11:35 GMT">
										<outline text="console.log (&quot;everySecond: feedUrl == &quot; +feedUrl + &quot;, err.message == &quot; + err.message);" created="Mon, 28 Nov 2022 23:11:45 GMT"/>
										<outline text="}" created="Mon, 28 Nov 2022 23:11:38 GMT"/>
										</outline>
									<outline text="});" created="Mon, 28 Nov 2022 23:11:27 GMT"/>
									</outline>
								<outline text="});" created="Mon, 28 Nov 2022 23:10:57 GMT"/>
								</outline>
							<outline text="}" created="Mon, 28 Nov 2022 23:10:29 GMT"/>
							</outline>
						<outline text="}" created="Wed, 30 Nov 2022 15:53:08 GMT"/>
						</outline>
					<outline text="deleteOldGuids ();" created="Wed, 30 Nov 2022 15:49:54 GMT"/>
					<outline text="}" created="Wed, 30 Nov 2022 15:49:27 GMT"/>
					</outline>
				<outline text="function everySecond () {" created="Mon, 28 Nov 2022 23:09:58 GMT">
					<outline text="if (flStatsChanged) {" created="Mon, 28 Nov 2022 23:30:53 GMT">
						<outline text="flStatsChanged = false;" created="Mon, 28 Nov 2022 23:30:56 GMT"/>
						<outline text="writeStats ();" created="Wed, 30 Nov 2022 15:47:54 GMT"/>
						<outline text="}" created="Mon, 28 Nov 2022 23:31:43 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Nov 2022 23:10:02 GMT"/>
					</outline>
				<outline text="" created="Mon, 21 Nov 2022 21:02:27 GMT"/>
				<outline text="function readConfig (fname, data, callback) {" created="Wed, 16 Nov 2022 15:42:09 GMT">
					<outline text="fs.readFile (fname, function (err, jsontext) {" created="Wed, 16 Nov 2022 15:42:34 GMT">
						<outline text="if (!err) {" created="Wed, 16 Nov 2022 15:42:51 GMT">
							<outline text="var jstruct;" created="Wed, 16 Nov 2022 15:42:50 GMT"/>
							<outline text="try {" created="Wed, 16 Nov 2022 15:43:21 GMT">
								<outline text="jstruct = JSON.parse (jsontext);" created="Wed, 16 Nov 2022 15:43:57 GMT"/>
								<outline text="for (var x in jstruct) {" created="Wed, 16 Nov 2022 15:44:48 GMT">
									<outline text="data [x] = jstruct [x];" created="Wed, 16 Nov 2022 15:44:54 GMT"/>
									<outline text="}" created="Wed, 16 Nov 2022 15:45:01 GMT"/>
									</outline>
								<outline text="}" created="Wed, 16 Nov 2022 15:43:26 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Wed, 16 Nov 2022 15:43:26 GMT">
								<outline text="console.log (&quot;readConfig: fname == &quot; + fname + &quot;, err.message == &quot; + utils.jsonStringify (err.message));" created="Wed, 16 Nov 2022 15:43:30 GMT"/>
								<outline text="}" created="Wed, 16 Nov 2022 15:43:43 GMT"/>
								</outline>
							<outline text="}" created="Wed, 16 Nov 2022 15:42:55 GMT"/>
							</outline>
						<outline text="callback ();" created="Wed, 16 Nov 2022 15:49:59 GMT"/>
						<outline text="});" created="Wed, 16 Nov 2022 15:42:44 GMT"/>
						</outline>
					<outline text="}" created="Wed, 16 Nov 2022 15:42:33 GMT"/>
					</outline>
				<outline text="readConfig (fnameStats, stats, function () {" created="Mon, 21 Nov 2022 21:05:00 GMT">
					<outline text="readConfig (&quot;config.json&quot;, config, function () {" created="Mon, 21 Nov 2022 21:05:00 GMT">
						<outline text="" created="Wed, 30 Nov 2022 15:40:03 GMT"/>
						<outline text="deleteOldGuids ();" isComment="true" created="Wed, 30 Nov 2022 15:40:03 GMT"/>
						<outline text="writeStats ();" isComment="true" created="Wed, 30 Nov 2022 15:47:18 GMT"/>
						<outline text="return;" isComment="true" created="Wed, 30 Nov 2022 15:40:04 GMT"/>
						<outline text="" isComment="true" created="Mon, 28 Nov 2022 23:55:29 GMT"/>
						<outline text="tootStatus (&quot;Hello world #3&quot;, undefined, function (err, data) {" isComment="true" created="Mon, 28 Nov 2022 23:55:29 GMT">
							<outline text="if (err) {" created="Mon, 28 Nov 2022 23:55:53 GMT">
								<outline text="console.log (err.message);" created="Mon, 28 Nov 2022 23:56:04 GMT"/>
								<outline text="}" created="Mon, 28 Nov 2022 23:55:57 GMT"/>
								</outline>
							<outline text="else {" created="Mon, 28 Nov 2022 23:55:58 GMT">
								<outline text="console.log (data);" created="Mon, 28 Nov 2022 23:56:04 GMT"/>
								<outline text="}" created="Mon, 28 Nov 2022 23:56:00 GMT"/>
								</outline>
							<outline text="});" created="Mon, 28 Nov 2022 23:55:47 GMT"/>
							</outline>
						<outline text="getUserInfo (function (err, data) {" isComment="true">
							<outline text="if (err) {" created="Mon, 28 Nov 2022 23:55:53 GMT">
								<outline text="console.log (err.message);" created="Mon, 28 Nov 2022 23:56:04 GMT"/>
								<outline text="}" created="Mon, 28 Nov 2022 23:55:57 GMT"/>
								</outline>
							<outline text="else {" created="Mon, 28 Nov 2022 23:55:58 GMT">
								<outline text="console.log (data);" created="Mon, 28 Nov 2022 23:56:04 GMT"/>
								<outline text="}" created="Mon, 28 Nov 2022 23:56:00 GMT"/>
								</outline>
							<outline text="});" created="Tue, 29 Nov 2022 17:29:41 GMT"/>
							</outline>
						<outline text="return;" isComment="true" created="Mon, 28 Nov 2022 23:56:27 GMT"/>
						<outline text="" created="Mon, 28 Nov 2022 23:55:29 GMT"/>
						<outline text="" created="Mon, 28 Nov 2022 23:55:29 GMT"/>
						<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Mon, 21 Nov 2022 21:08:38 GMT"/>
						<outline text="utils.runEveryMinute (everyMinute);" created="Wed, 30 Nov 2022 15:50:13 GMT"/>
						<outline text="setInterval (everySecond, 1000);" created="Mon, 28 Nov 2022 23:13:18 GMT"/>
						<outline text="});" created="Mon, 21 Nov 2022 21:05:01 GMT"/>
						</outline>
					<outline text="});" created="Mon, 21 Nov 2022 21:05:01 GMT"/>
					</outline>
				</outline>
			<outline text="readme.md" created="Tue, 29 Nov 2022 14:21:48 GMT">
				<outline text="# feedToMasto">
					<outline text="A Node app that checks a list of feeds periodically, posting new items to Mastodon."/>
					</outline>
				<outline text="### Why did you do this?" created="Thu, 01 Dec 2022 14:41:56 GMT">
					<outline text="These are things I believe, or goals I have." created="Thu, 01 Dec 2022 15:36:03 GMT">
						<outline text="* RSS should be part of the Fediverse. This is a first step." created="Thu, 01 Dec 2022 14:42:02 GMT"/>
						<outline text="* To provide good simple working code for the Mastodon API. I had to do too much work to figure out how to get what amounts to a Hello World script up and running. Now you don't have to do all that work. " created="Thu, 01 Dec 2022 14:43:40 GMT"/>
						<outline text="* If you want a process to periodically say something on your behalf via Mastodon, you have all the code you need, and instructions on how to set it up." created="Thu, 01 Dec 2022 15:36:43 GMT"/>
						<outline text="* You should be able to build feed-based utilities without giving any thought to reading feeds. Reading a feed should be as easy as reading a JSON file. This app illustrates how that works, using the reallySimple package. " created="Thu, 01 Dec 2022 14:42:18 GMT"/>
						<outline text="* I want to get some code out there into the Mastoverse, to start building a rep in the community. " created="Thu, 01 Dec 2022 14:42:56 GMT"/>
						</outline>
					</outline>
				<outline text="### Getting started" created="Thu, 01 Dec 2022 14:43:22 GMT">
					<outline text="You will need an account on a Mastodon server. " created="Thu, 01 Dec 2022 14:43:29 GMT"/>
					<outline text="You will need one or more feeds, they could be RSS, Atom or RDF. " created="Thu, 01 Dec 2022 14:45:18 GMT"/>
					<outline text="The feeds must have guids. This app depends on the guids being unique. " created="Thu, 01 Dec 2022 14:45:34 GMT"/>
					</outline>
				<outline text="### config.json" created="Thu, 01 Dec 2022 14:46:05 GMT">
					<outline text="Setting up the feedToMasto app is all done in config.json. Open it in a text editor." created="Thu, 01 Dec 2022 14:46:12 GMT"/>
					</outline>
				<outline text="### On your Mastodon account" created="Thu, 01 Dec 2022 14:46:34 GMT">
					<outline text="Click on &lt;i&gt;Preferences,&lt;/i&gt; in the right margin." created="Thu, 01 Dec 2022 14:46:44 GMT"/>
					<outline text="Click on &lt;i&gt;Development&lt;/i&gt; in the left margin." created="Thu, 01 Dec 2022 14:52:14 GMT"/>
					<outline text="Click on the &lt;i&gt;New application&lt;/i&gt; button in the upper right corner. " created="Thu, 01 Dec 2022 14:52:35 GMT"/>
					<outline text="You should see a form that &lt;a href=&quot;http://scripting.com/images/2022/12/01/newApplicationScreen.png&quot;&gt;looks like this&lt;/a&gt;. We're going to fill in the form. " created="Thu, 01 Dec 2022 14:52:47 GMT">
						<outline text="* Application name -- anything you like, perhaps feedToMasto." created="Thu, 01 Dec 2022 14:54:58 GMT"/>
						<outline text="* Application website -- anything you like." created="Thu, 01 Dec 2022 14:55:36 GMT"/>
						<outline text="* Redirect URI -- leave it as-is." created="Thu, 01 Dec 2022 14:55:45 GMT"/>
						</outline>
					<outline text="In the &lt;i&gt;Scopes&lt;/i&gt; section do the following." created="Thu, 01 Dec 2022 14:56:00 GMT">
						<outline text="* Uncheck read." created="Thu, 01 Dec 2022 14:56:20 GMT"/>
						<outline text="* Check read:accounts." created="Thu, 01 Dec 2022 14:56:23 GMT"/>
						<outline text="* Uncheck write." created="Thu, 01 Dec 2022 14:56:36 GMT"/>
						<outline text="* Check write:statuses." created="Thu, 01 Dec 2022 14:57:17 GMT"/>
						<outline text="* Uncheck follow." created="Thu, 01 Dec 2022 14:57:28 GMT"/>
						</outline>
					<outline text="When you're done the Scopes section should &lt;a href=&quot;http://scripting.com/images/2022/12/01/checkboxesScreen.png&quot;&gt;look like this&lt;/a&gt;. " created="Thu, 01 Dec 2022 15:00:07 GMT"/>
					<outline text="Finally click the Submit button at the bottom of the page. " created="Thu, 01 Dec 2022 15:01:06 GMT"/>
					<outline text="You should then see a list of your applications, with this new app on the list." created="Thu, 01 Dec 2022 15:01:22 GMT"/>
					</outline>
				<outline text="### Back in config.json" created="Thu, 01 Dec 2022 15:01:42 GMT">
					<outline text="Open config.json in an editor. &lt;a href=&quot;http://scripting.com/images/2022/12/01/configJsonScreen.png&quot;&gt;This&lt;/a&gt; is what you should see. " created="Thu, 01 Dec 2022 15:19:22 GMT"/>
					<outline text="On the screen in your browser you should see various numeric strings that you are going to copy into config.json." created="Thu, 01 Dec 2022 15:19:36 GMT"/>
					<outline text="Copy the three items, &lt;i&gt;Client key,&lt;/i&gt; &lt;i&gt;Client secret&lt;/i&gt; and &lt;i&gt;Your access token&lt;/i&gt; from the browser to the xxx's in config.json as shown in this &lt;a href=&quot;http://scripting.com/images/2022/12/01/copyFromWebToConfig.png&quot;&gt;screen shot&lt;/a&gt;. " created="Thu, 01 Dec 2022 15:26:18 GMT"/>
					<outline text="Enter the URL of your Mastodon server in &lt;i&gt;urlMastodonServer&lt;/i&gt; in config.json." created="Thu, 01 Dec 2022 15:27:43 GMT"/>
					</outline>
				<outline text="### What the other items in config.json are for" created="Thu, 01 Dec 2022 15:28:26 GMT">
					<outline text="The other values in config.json have default values that work well for a first run of the app. The only ones you should come back before running it for real are &lt;i&gt;feeds&lt;/i&gt; and &lt;i&gt;disclaimer. &lt;/i&gt;" created="Thu, 01 Dec 2022 15:46:21 GMT">
						<outline text="* enabled -- if you set it false and reboot the app it will do everything but check the feeds. " created="Thu, 01 Dec 2022 15:28:39 GMT"/>
						<outline text="* feeds -- an array of feed URLs. I've included two feeds to get you started. You should change them to your feed addresses of course. " created="Thu, 01 Dec 2022 15:30:03 GMT"/>
						<outline text="* ctSecsBetwChecks -- the amount of time between feed checks. We only check every minute at the top of the minute. Default value is 60." created="Thu, 01 Dec 2022 15:30:34 GMT"/>
						<outline text="* maxCtChars -- the number of characters in a toot. Maybe you have a higher number on your server?" created="Thu, 01 Dec 2022 15:31:37 GMT"/>
						<outline text="* flOnlyPostNewItems -- If false, the first time we read a feed we'll dump all the items into the Mastodon account. Probably not what you had in mind, that's why it defaults to true. " created="Thu, 01 Dec 2022 15:32:05 GMT"/>
						<outline text="* maxGuids -- we use the guids in feed items to determine if we've already pushed the item to Mastodon. At some point we no longer need to keep it around because it's no longer in the feed, but we never know for sure what that is. It depends on how many feeds you have and how big they tend to get. The default of 2500 seemed a good balance between performance and the risk of posting items twice." created="Thu, 01 Dec 2022 15:32:59 GMT"/>
						<outline text="* flServerSupportsMarkdown -- if it does, we'll look for source:markdown elements in the feed item and transmit that in place of the description element." created="Thu, 01 Dec 2022 15:34:14 GMT"/>
						<outline text="* disclaimer -- text that appears at the begining of every toot. If you don't want it, make it the empty string." created="Thu, 01 Dec 2022 15:35:05 GMT"/>
						</outline>
					</outline>
				</outline>
			<outline text="config.json" isComment="true" created="Mon, 28 Nov 2022 23:04:33 GMT">
				<outline text="{" created="Mon, 28 Nov 2022 23:04:39 GMT">
					<outline text="&quot;masto&quot;: {" created="Tue, 29 Nov 2022 17:07:07 GMT">
						<outline text="&quot;appName&quot;: &quot;feedToMasto&quot;," created="Tue, 29 Nov 2022 16:58:06 GMT"/>
						<outline text="&quot;clientKey&quot;: &quot;xxx&quot;," created="Tue, 29 Nov 2022 16:57:34 GMT"/>
						<outline text="&quot;clientSecret&quot;: &quot;xxx&quot;," created="Tue, 29 Nov 2022 16:57:41 GMT"/>
						<outline text="&quot;accessToken&quot;: &quot;xxx&quot;," created="Tue, 29 Nov 2022 16:57:49 GMT"/>
						<outline text="&quot;scopes&quot;: &quot;write:statuses+read:accounts&quot;" created="Tue, 29 Nov 2022 16:58:27 GMT"/>
						<outline text="}" created="Tue, 29 Nov 2022 17:07:14 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Nov 2022 23:04:41 GMT"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Tue, 29 Nov 2022 14:08:17 GMT">
			<outline text="nodeEditorSuite.utilities.buildIFeedToMasto ()" created="Sun, 06 Nov 2022 15:51:50 GMT"/>
			</outline>
		</body>
	</opml>
